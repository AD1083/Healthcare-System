using Healthcare_System.Models;
using Healthcare_System.Views;

namespace Healthcare_System.Presenters
{
    public class LoginPresenter
    {
        private readonly ILoginView _view; //instance of the view interface to expose the actual view functionality
        private readonly LoginService _service; //backend model for logging in operations
        private readonly RegistrationService _regService; //backend model for registration services

        /// <summary>
        /// Login presenter constructor, which creates the interface between the frontend views and backend models
        /// </summary>
        /// <param name="view"></param>
        /// <param name="service"></param>
        /// <param name="regService"></param>
        public LoginPresenter(ILoginView view, LoginService service, RegistrationService regService)
        {
            //object instances declared in the constructor method call, passed into the presenter fields declared above
            //allows the presenter to interface between the backend model and the front end UI view
            _view = view;
            _service = service;
            _regService = regService;

            //button sign-in event handling, passing view properties to the lcoal Login method
            _view.Login += () => Login(_view.StaffID, _view.Password); //, _view.Role);
        }

        /// <summary>
        /// Login method that handles the login event generated by the user
        /// </summary>
        /// <param name="staffID">the staff id entered in the ui</param>
        /// <param name="password">the password entered by the user</param>
        /// <param name="role">the </param>
        private void Login(string staffID, string password) //, string role)
        {
            Staff staff = new Staff { StaffID = staffID, Password = password }; //, Role = role };//create staff object
            if (!_service.Login(ref staff)) //by reference as not all the staff properties have been filled, so need to be updated from the database
            {
                _view.ShowError("Check your Staff ID and password"); //display an error message for failed login using an incorrect staff id/password
            }
            else
            {
                // successful authorization, capture registration start time of the staff
                _regService.RecordStartTime(staff);
                //only nurse or consultant has access to patients in the central desk
                if (staff.Role == "Nurse" || staff.Role == "Consultant")
                {
                    this.Hide();//hide current view
                    //create and run presenter of the central desk and pass current staff
                    CentralDeskPresenter presenter = new CentralDeskPresenter(new CentralDeskView(), new RegistrationService(), staff, new CentralDesk(staff));
                    presenter.Run();
                }
                else//Manager has access to the system data from the databse
                {
                    this.Hide();//hide current view
                    //create and run presenter of the manager
                    ManagerViewPresenter presenter = new ManagerViewPresenter(new ManagerialView(), new RegistrationService(), new ManagerialService(), staff);
                    presenter.Run();
                }
            }
        }
        
        /// <summary>
        /// Show the view
        /// </summary>
        public void Run()
        {
            _view.Show();
        }

        /// <summary>
        /// Hide the view
        /// </summary>
        public void Hide()
        {
            _view.Hide();
        }
    }
}
